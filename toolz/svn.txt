svn diff -r 2:3 rules.txt
^^^
Получение разницы между коммитами в svn, йахуууу
То есть можно сравнить состояние файла в нужной ревизии (в которой залили оригинал), и в последней (интересно, голова там есть, непривязанная к номеру?)
Тогда можно сделать так:
Проверяем каждый файл диффом
Если разница нулевая, ничего не делаем
Если есть, копируем файл с последнего состояния
И всё, так получаем диффы - цикл по всем файлам для svn list
Можно наверное делать для директорий? Тогда ж вообще красотища

svn diff -c 5 rulse.txt
^^^
сравниваем 5 с предыдущей версией

svn diff -c 5 http://svn.example.com/repos/example/trunk/text/rules.txt
^^^
шикардос, делаем проверку вне рабочей копии \m/

svn log -r 5:19 http://foo.com/svn/trunk/code/foo.c
^^^
Смотрим историю коммитов с 5 по 19 ревизию в хронологическом порядке для файла foo.c
svn log -r 19:5
^^^
В обратном хронологическом порядке! Для всех файлов

svn cat -r 2 rules.txt
^^^
смотрим файл в ревизии 2

svn list -v http://svn.example.com/repo/project
^^^
ls для удалённого репо
ЗЫ! без адреса она полезет в адрес из рабочей копии, а не в содержание самой рабочей копии!

svn update -r 1729
^^^
делаем локальную рабочую копию как в ревизии

svn cat -r 1 concept/IDEA@BASE
^^^
Ыщ! Спрашиваем отобразить текущий файл IDEA в том состоянии, в котором он был в ревизии 1
@BASE - это указатель "Peg revision", который нужен для того, чтобы разбираться, на какие файлы мы указываем:
на текущие в старой версии, или на _другие файлы с тем же именем_, которые присутствовали в прошлой версии
Соотсно, можно указывать @num для того, чтобы показывать на фактический файл, а оперативные ревизии (-r) для того, чтобы задавать диапазон действий с этим файлом, как бы он ни назывался в этом диапазоне

svn cat concept/IDEA@1
^^^
Показываем на файл с адресом и названием, которые были действительны на момент ревизии 1

svn diff -r 4:10 http://svn.red-bean.com/projects/frabnaggilywort/IDEA@20
^^^
Показываем на файл, который лежал по такому-то адресу в ревизии 20, и затем показываем изменения, которые произошли с ним с четвёртой ревизии по десятую, как бы он при этом ни назывался раньше!

svn checkout http://svn.example.com/svn/repo/trunk@1729 oldworkdir
^^^
Создаём рабочую копию репозитория на момент ревизии 1729, полный возврат во времени

svn checkout http://svn.example.com/svn/repo/trunk -r 1729 oldfilesdir
^^^
Создаём рабочую копию репозитария с нынешней _структурой_, но старым состоянием файлов

svn export http://addr
^^^
создание релиза! выкачивание файлов без .svn

svn cleanup
^^^
Разрулить залоченные файлы, которые остались запертыми после незавершённых операций svn - которые попали в todo list для транзакции, но не выполнились из-за обрыва действй svn

-rBLAHBLAH
^^^
Ключевые слова для ревизий!

HEAD
^^^
Самый последний момент в репозитории

BASE
^^^
номер ревизии для штуки из локального репо, причём не включающую локальные изменения 

COMMITED
^^^
близжайший номер к BASE, в котором локальные изменения включены

PREV
^^^
COMMITED-1, кхы-кхы

svn checkout -r {2006-02-17}
^^^
идентификатор ревизии по времени! Причём эти фигурные кавычки надобно экранировать, скорее всего
Дата принимается в формате ISO-8601, и возможно в других
Для широкого диапазона в дате берётся самое свежее состояние
Причём! для даты дня возьмётся время 00:00, и потом svn пойдёт искать самое "раннее" состояние, то бишь отматывать время назад
То бишь оно выдаст состояния с предыдущего дня - поэтому надо делать в дне дату +1
Также пердуперждают, что если даты менялись вручную через setprop, то конвертация дата->номер ревизии может выдавать глюки, если ревизии меняли местами

svn propset copyright '(c) 2006 Red-Bean Software' calc/button.c
^^^
установка свойства copyright в значение 'тащемта например' 

svn propset license -F /path/to/LICENSE calc/button.c
^^^
файл, который содержит значение свойства (оно может быть и бинарным)

svn proplist calc/button.c
^^^
выдаёт список свойств на узле

svn propget <propname> calc/button.c
^^^
выдаёт значение свойства propname на узле

svn proplist -v calc/button.c
^^^
Вывод всего сразу - свойств и значений

svn propdel license calc/button.c
^^^
убийство свойства

.subversion/config
use-commit-times = yes
^^^
значение настроек, чтобы даты файлов выставлялись не от времени апдейта, а от времени их коммита
Для сохранения оригинальных datestamp-ов это бесполезно, потому что при коммите они портятся так или иначе
Если же их менять в рабочей копии после коммита, то svn не считает это апдейтом и файлы не перекачивает - что хорошо
Значит, можно настроить хук на принудительный возврат оригинальных time-штампов

svn propset hrdate "`stat -c %y $filename`" $filename
touch -d "`svn propget hrdate $filename`" $filename
^^^
вот тебе и хуки, только в циклы загнать

svn propset svn:log "* button.c: Fix a compiler warning." -r11 --revprop \
              http://svn.example.com/repos/project
^^^
добавляем опцию --revprop и теми же командами правим свойства для ревизий целиком
(с указанием полного урла - ещё и без рабочей копии)
Кроме того, будет нелищне помнить, шо для модификации свойств ревизий, которые не версионируются, нужно в конфигах svn-сервака специально выставлять разрешение

svnadmin create `pwd`/svn
svnserve -d -r `pwd`/svn
svn checkout file://localhost/home/ton/arena/svn
^^^
для тестов локального сервака
